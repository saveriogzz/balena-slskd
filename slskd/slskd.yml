debug: false
remote_configuration: true
instance_name: default
flags:
  no_logo: false
  no_start: false
  no_connect: false
  no_share_scan: false
  force_share_scan: false
  no_version_check: false
  log_sql: false
  experimental: false
  volatile: false
relay:
  enabled: false
  mode: controller # controller (default), agent, or debug (for local development)
  # controller config is required when running in 'agent' mode
  # this specifies the relay controller that will be controlling this agent
  controller:
    address: https://some.site.com:5000
    ignore_certificate_errors: false
    api_key: <a 16-255 character string corresponding to one of the controller's 'readwrite' or 'administrator' API keys>
    secret: <a 16-255 character shared secret matching the controller's config for this agent>
    downloads: false
  # agent config is optional when running in 'controller' mode
  # this specifies all of the agents capable of connecting
  agents:
    my_agent:
      secret: <a 16-255 character string unique to this agent>
      cidr: 0.0.0.0/0,::/0
directories:
  incomplete: ~
  downloads: ~
shares:
  directories:
    - /music
  filters:
    - \.ini$
    - Thumbs.db$
    - \.DS_Store$
  cache:
    storage_mode: memory
    workers: 16
rooms:
  - ~
global:
  upload:
    slots: 20
    speed_limit: 1000
  download:
    slots: 500
    speed_limit: 1000
groups:
  default:
    upload:
      priority: 500
      strategy: roundrobin
      slots: 10
  leechers:
    thresholds:
      files: 1
      directories: 1
    upload:
      priority: 999
      strategy: roundrobin
      slots: 1
      speed_limit: 100
  blacklisted:
    members:
      - <username to blacklist>
  user_defined:
    my_buddies:
      upload:
        priority: 250
        queue_strategy: firstinfirstout
        slots: 10
      members:
        - alice
        - bob
filters:
  search:
    request:
      - ^.{1,2}$
web:
  port: 5030
  https:
    disabled: false
    port: 5031
    force: false
    certificate:
      pfx: ~
      password: ~
  url_base: /
  content_path: wwwroot
  logging: false
  authentication:
    disabled: false
    username: slskd
    password: slskd
    jwt:
      key: ~
      ttl: 604800000
    api_keys:
      my_api_key:
        key: <some example string between 16 and 255 characters>
        role: readonly # readonly, readwrite, administrator
        cidr: 0.0.0.0/0,::/0
logger:
  loki: ~
metrics:
  enabled: false
  url: /metrics
  authentication:
    disabled: false
    username: slskd
    password: slskd
feature:
  swagger: false
soulseek:
  username: $SLSK_USR
  password: $SLSK_PWD
  description: |
    A slskd user. https://github.com/slskd/slskd
  listen_port: 50300
  diagnostic_level: Info
  distributed_network:
    disabled: false
    disable_children: false
    child_limit: 25
    logging: false
  connection:
    timeout:
      connect: 10000
      inactivity: 15000
    buffer:
      read: 16384
      write: 16384
      transfer: 262144
      write_queue: 250
    proxy:
      enabled: false
      address: ~
      port: ~
      username: ~
      password: ~
integration:
  ftp:
    enabled: false
    address: ~
    port: ~
    username: ~
    password: ~
    remote_path: /
    encryption_mode: auto
    ignore_certificate_errors: false
    overwrite_existing: true
    connection_timeout: 5000
    retry_attempts: 3
  pushbullet:
    enabled: false
    access_token: ~
    notification_prefix: "From slskd:"
    notify_on_private_message: true
    notify_on_room_mention: true
    retry_attempts: 3
    cooldown_time: 900000